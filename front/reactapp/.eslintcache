[{"/usr/src/app/reactapp/src/index.js":"1","/usr/src/app/reactapp/src/App.js":"2","/usr/src/app/reactapp/src/components/Data.js":"3","/usr/src/app/reactapp/src/apis/local_url.js":"4","/usr/src/app/reactapp/src/components/FormTodo.js":"5","/usr/src/app/reactapp/src/components/firebase.js":"6","/usr/src/app/reactapp/src/components/FileTest.js":"7","/usr/src/app/reactapp/src/test_js/Home.js":"8","/usr/src/app/reactapp/src/test_js/About.js":"9","/usr/src/app/reactapp/src/test_js/RootTest.js":"10","/usr/src/app/reactapp/src/apis/Test.js":"11","/usr/src/app/reactapp/src/login_js/UserLog.js":"12"},{"size":170,"mtime":1619095537000,"results":"13","hashOfConfig":"14"},{"size":6156,"mtime":1621945931000,"results":"15","hashOfConfig":"14"},{"size":1797,"mtime":1620040359000,"results":"16","hashOfConfig":"14"},{"size":345,"mtime":1619091178000,"results":"17","hashOfConfig":"14"},{"size":5779,"mtime":1620820954000,"results":"18","hashOfConfig":"14"},{"size":686,"mtime":1619944794000,"results":"19","hashOfConfig":"14"},{"size":1844,"mtime":1620820809000,"results":"20","hashOfConfig":"14"},{"size":201,"mtime":1620823222000,"results":"21","hashOfConfig":"14"},{"size":202,"mtime":1620822879000,"results":"22","hashOfConfig":"14"},{"size":424,"mtime":1621945909000,"results":"23","hashOfConfig":"14"},{"size":794,"mtime":1621942374000,"results":"24","hashOfConfig":"14"},{"size":4736,"mtime":1621946193000,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j6bv97",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/usr/src/app/reactapp/src/index.js",[],"/usr/src/app/reactapp/src/App.js",[],"/usr/src/app/reactapp/src/components/Data.js",["55"],"import React, { useState } from \"react\";\nimport axios from 'axios';\nimport firebase, { storage } from \"./firebase\";\n\nfunction Data(props) {\n  const info = props.info.map(list => {\n    return (\n      <DataItem\n        key={list.id}\n        list={list}\n        EditForm={props.EditForm}\n      />\n    );\n  });\n  return (\n    //投稿がない時の出力\n    <div>\n      {props.info.length ? info : <p>Nothing to do!</p>}\n    </div>\n  );\n}\n\nfunction DataItem(props) {\n  const [imageUrl, setImageUrl] = useState(\"\");\n\n    storage\n      .ref(\"images\")\n      .child(props.list.image_name)\n      .getDownloadURL()\n      .then(fireBaseUrl => {\n        setImageUrl(fireBaseUrl);\n    });\n\n\n  return (\n    <div className=\"div_item\">\n      <p>{props.list.id}</p>\n      <p><a href={props.list.id}>{props.list.name}</a></p>\n      <p>{props.list.contents}</p>\n      <img alt=\"投稿画像\" width=\"400\" height=\"250\" src={imageUrl}/>\n      <p>{props.list.created_at}</p>\n      <button type=\"submit\"onClick={(e) => DataDelete(props.list.id)}>削除</button> \n      <button type=\"submit\"onClick={(e) => props.EditForm(props.list.id)}>編集</button> \n    </div>\n  );\n}\n\nfunction DataDelete(id) {\n  const d_url = \"http://localhost/delete/\" + id;\n  // const d_url = \"http://localhost/post_test\";\n  // const d_url = \"http://localhost/test\";\n  const item = [\"KD\", \"ddd\", 1111, \"fahbflkhbk;arbjgbg;jog;ber\", \"imagedata\"]; \n  // console.log(d_url);\n  if(window.confirm('削除してよろしいですか？')){\n\n    axios({\n      method : \"POST\",\n      url : d_url,\n      data: item\n    })\n    .then((response)=> {\n      console.log(response);\n    })\n    .catch((error)=> {\n      console.info(error);\n    });\n\n    return window.confirm('削除されました。');\n  } else {\n    return;\n  }\n}\n\nexport default Data;\n\n\n\n\n\n\n",["56","57"],"/usr/src/app/reactapp/src/apis/local_url.js",[],"/usr/src/app/reactapp/src/components/FormTodo.js",["58"],"import React from \"react\";\nimport axios from 'axios';\nimport firebase, { storage } from \"./firebase\";\n\nfunction FormTodo(props) {\n  // console.log(props);\n  // console.log(props.imageData);\n  // console.log(props.imageFile);\n\n  /// imageFile 中身 file[0];\n\n  const imageData = props.imageData\n  let preview = ''\n  if(imageData != null) {\n      preview = (\n          <div>\n          <img alt=\"投稿画像\" width=\"400\" height=\"250\" src={imageData}/>\n          </div>\n      )\n  }\n  // name[0] contents[1] pas_wd[2] image_name[3] imageData\n  let post_item = [props.item_name, props.item_contents, props.item_pas, props.imageFile, props.imageData]\n\n  //投稿時のフォーム\n  if (props.form_mod === 0) {\n    return (\n      <div>\n        {preview}\n          <div>\n            <label className=\"formLavel\">名前</label>\n            <input name=\"name\" type=\"text\" value={props.item_name} onChange={props.updateItemName} />\n          </div>\n          <div>\n            <label className=\"formLavel\">本文</label>\n            <textarea name=\"contents\" onChange={props.updateItemContents} rows=\"4\" value={props.item_contents}/>\n          </div>\n\n          <div>\n            <label className=\"formLavel\">画像・動画</label>\n            <input type=\"file\" name=\"upimg\" onChange={(e) => props.onFileChange(e)}/>\n          </div>\n          \n          <div>\n            <label className=\"formLavel\">パスワード（4桁以上 数字）</label>\n            <input name=\"pas\" type=\"text\" value={props.item_pas} onChange={props.updateItemPas} />\n          </div>\n          <div>\n            <button type=\"submit\" onClick={(e) => PostData(post_item, props)}>投稿</button> \n          </div>\n      </div>\n    );\n  }\n\n  //編集時のフォーム\n  if (props.form_mod === 1) {\n    return (\n      <div>\n        <div>\n          <label className=\"formLavel\">名前</label>\n          <input type=\"text\" value={props.item_name_e} onChange={props.updateItemName} />\n        </div>\n        <div>\n          <label className=\"formLavel\">本文</label>\n          <textarea onChange={props.updateItemContents} rows=\"4\" value={props.item_contents_e}/>\n        </div>\n        <div>\n          <label className=\"formLavel\">パスワード（4桁以上 数字）</label>\n          <input type=\"text\" value={props.item_pas_e} onChange={props.updateItemPas} />\n        </div>\n        <div>\n          <input type=\"hidden\" value={props.item_id}/>\n          <button type=\"submit\" onClick={(e) => updateData(props)}>編集</button> \n          <button type=\"submit\" onClick={props.formModReturn}>キャンセル</button> \n        </div>\n      </div>\n    );\n  }\n\n}\n\nfunction PostData(item,props) {\n  const post_url = \"http://localhost/test\";\n  // console.log(item[3]);\n  const image_file = item[3];\n  // console.log(image_file.name);\n\n  const items = [item[0], item[1], item[2], image_file.name]\n  if(!window.confirm('投稿しますか？')){\n    return;\n  }else {\n    if (items[0] === \"\") {\n    return window.confirm('名前は必須項目です。')\n    }\n    if (items[1] === \"\") {\n      return window.confirm('本文は必須項目です。')\n    }\n    if (items[2] === \"\") {\n      return window.confirm('パスワードは必須項目です。')\n    }\n    if (items[2].length <= 3) {\n      return window.confirm('パスワードは4桁以上数字のみです。')\n    }\n    //画像Firebaseに保存\n    // const uploadTask = storage.ref(`/images/${image_file.name}`).put(image_file);\n    // uploadTask.on(\n    //   firebase.storage.TaskEvent.STATE_CHANGED\n    // );\n\n    imagePush(image_file);\n\n\n\n    axios({\n      method : \"POST\",\n      url : post_url,\n      data : items\n    })\n    .then((response)=> {\n      // console.log(response.data);\n    })\n    .catch((error)=> {\n      console.info(error);\n    });\n    return props.formModReturn();\n  }\n}\n\n//編集保存\nfunction updateData(props) {\n  const item = [props.item_id, props.item_name_e, props.item_contents_e, props.item_pas_e];\n  // console.log(item);\n  const updata_url = \"http://localhost/update\";\n  if(!window.confirm('編集しますか？')){\n    return;\n  }else {\n    if (item[1] === \"\") {\n    return window.confirm('名前は必須項目です。')\n    }\n    if (item[2] === \"\") {\n      return window.confirm('本文は必須項目です。')\n    }\n    if (item[3] === \"\") {\n      return window.confirm('パスワードは必須項目です。')\n    }\n    if (item[3].length <= 3) {\n      return window.confirm('パスワードは4桁以上数字のみです。')\n    }\n    axios({\n      method : \"POST\",\n      url : updata_url,\n      data : item\n    })\n    .then((response)=> {\n      // console.log(response);\n    })\n    .catch((error)=> {\n      console.info(error);\n    });\n    return props.formModReturn();\n  }\n}\n\n//画像保存Firebase\nfunction imagePush(image) {\n  storage.ref(`/images/${image.name}`).put(image);\n  \n  // if (image === \"\") {\n  //   console.log(\"ファイルが選択されていません\");\n  // }\n  // // アップロード処理\n  // const uploadTask = storage.ref(`/images/${image.name}`).put(image);\n  // uploadTask.on(\n  //   firebase.storage.TaskEvent.STATE_CHANGED,\n  //   next,\n  //   error,\n  //   complete\n  // );\n\n  // const next = snapshot => {\n  //   // 進行中のsnapshotを得る\n  //   // アップロードの進行度を表示\n  //   const percent = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n  //   console.log(percent + \"% done\");\n  //   console.log(snapshot);\n  // };\n  // const error = error => {\n  //   // エラーハンドリング\n  //   console.log(error);\n  // };\n  // const complete = () => {\n  //   // 完了後の処理\n  //   // 画像表示のため、アップロードした画像のURLを取得\n  //   console.log(\"upload OK\");\n  // };\n\n}\n\n\nexport default FormTodo;",["59","60"],"/usr/src/app/reactapp/src/components/firebase.js",[],"/usr/src/app/reactapp/src/components/FileTest.js",[],"/usr/src/app/reactapp/src/test_js/Home.js",[],"/usr/src/app/reactapp/src/test_js/About.js",[],["61","62"],"/usr/src/app/reactapp/src/test_js/RootTest.js",[],"/usr/src/app/reactapp/src/apis/Test.js",[],"/usr/src/app/reactapp/src/login_js/UserLog.js",["63"],{"ruleId":"64","severity":1,"message":"65","line":3,"column":8,"nodeType":"66","messageId":"67","endLine":3,"endColumn":16},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"64","severity":1,"message":"65","line":3,"column":8,"nodeType":"66","messageId":"67","endLine":3,"endColumn":16},{"ruleId":"68","replacedBy":"72"},{"ruleId":"70","replacedBy":"73"},{"ruleId":"68","replacedBy":"74"},{"ruleId":"70","replacedBy":"75"},{"ruleId":"64","severity":1,"message":"76","line":14,"column":9,"nodeType":"66","messageId":"67","endLine":14,"endColumn":15},"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","no-native-reassign",["77"],"no-negated-in-lhs",["78"],["77"],["78"],["77"],["78"],"'method' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]