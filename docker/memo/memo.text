index index.php index.html;
root /var/www/docker-laravel-app/public;

    root /var/www/docker-laravel-app/resources/views/post;
    index index.html index.php list.blade.php;





pogbakami@gmail.com

<form method="POST" action="/image_post" >
    <div>
        <label className="formLavel">画像・動画</label>
        <input type="file" name="upimg" onChange={(e) => props.onFileChange(e)}/>
    </div>
    <div>
        <input type="submit" name="media" value="画像投稿"/>
    </div>
</form>


<div>
              <label className="formLavel">名前</label>
              <input name="name" type="text" value={props.item_name} onChange={props.updateItemName} />
            </div>
            <div>
              <label className="formLavel">本文</label>
              <textarea name="contents" onChange={props.updateItemContents} rows="4" value={props.item_contents}/>
            </div>

            <div>
              <label className="formLavel">画像・動画</label>
              <input type="file" name="upimg" onChange={(e) => props.onFileChange(e)}/>
            </div>
            
            <div>
              <label className="formLavel">パスワード（4桁以上 数字）</label>
              <input name="pas" type="text" value={props.item_pas} onChange={props.updateItemPas} />
            </div>
            <div>
              <button type="submit" onClick={(e) => postData(props)}>投稿</button> 
            </div>




<form method="POST" action="/image_post" >
            <div>
              <label className="formLavel">名前</label>
              <input name="name" type="text" />
            </div>
            <div>
              <label className="formLavel">本文</label>
              <textarea name="contents" rows="4"/>
            </div>

            <div>
              <label className="formLavel">画像・動画</label>
              <input type="file" name="upimg"/>
            </div>
            
            <div>
              <label className="formLavel">パスワード（4桁以上 数字）</label>
              <input name="pas" type="text"  />
            </div>
            <div>
              <button type="submit">投稿</button> 
            </div>
        </form>



        return [

    /*
    |--------------------------------------------------------------------------
    | Default Mailer
    |--------------------------------------------------------------------------
    |
    | This option controls the default mailer that is used to send any email
    | messages sent by your application. Alternative mailers may be setup
    | and used as needed; however, this mailer will be used by default.
    |
    */

    'default' => env('MAIL_MAILER', 'smtp'),

    /*
    |--------------------------------------------------------------------------
    | Mailer Configurations
    |--------------------------------------------------------------------------
    |
    | Here you may configure all of the mailers used by your application plus
    | their respective settings. Several examples have been configured for
    | you and you are free to add your own as your application requires.
    |
    | Laravel supports a variety of mail "transport" drivers to be used while
    | sending an e-mail. You will specify which one you are using for your
    | mailers below. You are free to add additional mailers as required.
    |
    | Supported: "smtp", "sendmail", "mailgun", "ses",
    |            "postmark", "log", "array"
    |
    */

    'mailers' => [
        'smtp' => [
            'transport' => 'smtp',
            'host' => env('MAIL_HOST', 'pogbakami@icloud.com'),
            'port' => env('MAIL_PORT', 587),
            'from' => [
              'address' => 'pogbakami@icloud.com',
              'name' => 'Example',
            ],
            'encryption' => env('MAIL_ENCRYPTION', 'tls'),
            'username' => env('MAIL_USERNAME'),
            'password' => env('MAIL_PASSWORD'),
            'sendmail' => '/usr/sbin/sendmail -bs',
            'timeout' => null,
            'auth_mode' => null,
        ],

        'ses' => [
            'transport' => 'ses',
        ],

        'mailgun' => [
            'transport' => 'mailgun',
        ],

        'postmark' => [
            'transport' => 'postmark',
        ],

        'sendmail' => [
            'transport' => 'sendmail',
            'path' => '/usr/sbin/sendmail -bs',
        ],

        'log' => [
            'transport' => 'log',
            'channel' => env('MAIL_LOG_CHANNEL'),
        ],

        'array' => [
            'transport' => 'array',
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Global "From" Address
    |--------------------------------------------------------------------------
    |
    | You may wish for all e-mails sent by your application to be sent from
    | the same address. Here, you may specify a name and address that is
    | used globally for all e-mails that are sent by your application.
    |
    */

    'from' => [
        'address' => env('MAIL_FROM_ADDRESS', 'hello@example.com'),
        'name' => env('MAIL_FROM_NAME', 'Example'),
    ],

    /*
    |--------------------------------------------------------------------------
    | Markdown Mail Settings
    |--------------------------------------------------------------------------
    |
    | If you are using Markdown based email rendering, you may configure your
    | theme and component paths here, allowing you to customize the design
    | of the emails. Or, you may simply stick with the Laravel defaults!
    |
    */

    'markdown' => [
        'theme' => 'default',

        'paths' => [
            resource_path('views/vendor/mail'),
        ],
    ],

];


const App = () => {
  const [resources, setResources] = useState([]);
  
  const getPosts = async () => {
    // Headerを作成
    const fetchOption = {};

    const headers = new Headers();
    headers.append('Content-Type', 'text/plain');
    headers.append('X-Custom-Header', 'custom-header');
    headers.append('Content-Type', 'application/json;charset=utf-8');
    headers.append('Access-Control-Allow-Origin', '*');
    fetchOption["headers"] = headers;
     
    
    //   fetch("http://localhost/pos" ,fetchOption, {
    //     method: 'POST',
        // headers: {
        //   'Content-Type': 'application/json;charset=utf-8',
        //   'Access-Control-Allow-Origin': '*'
        // }
    axios.defaults.baseURL = 'http://localhost';
    axios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';
    axios.defaults.headers.post['Access-Control-Allow-Origin'] = '＊';
    
      axios.get("/pos",fetchOption)
      .then(response => {
        const posts = response.data;      
        console.log(posts);  
        // setResources(posts.data);
      })
      .catch(error => {
        console.log(error);
        console.log("no");
      });

  };
    return (
    <div className='ui container' style={{marginTop: '30px'}}>
      <Button onClick={getPosts} color='skyblue' text="posts"/>
      <Data resources={resources}/>
    </div>
  );
};


{/* <button type="submit" className="btn btn-primary" onClick={(e) => deleteDate(props)}>
        削除
      </button>
    <form method="POST" onSubmit={}>
      <button type="submit" className="btn btn-primary" onClick={(e) => props.editFormId(resource.id)}>
        編集
      </button> */}
    {/* </form> */}



service firebase.storage {
  match /b/{bucket}/o {
    match /{allPaths=**} {
      allow read, write: if request.auth != null;
    }
  }
}







<!-- The core Firebase JS SDK is always required and must be listed first -->
<script src="https://www.gstatic.com/firebasejs/8.4.3/firebase-app.js"></script>

<!-- TODO: Add SDKs for Firebase products that you want to use
     https://firebase.google.com/docs/web/setup#available-libraries -->
<script src="https://www.gstatic.com/firebasejs/8.4.3/firebase-analytics.js"></script>

<script>
  // Your web app's Firebase configuration
  // For Firebase JS SDK v7.20.0 and later, measurementId is optional
  var firebaseConfig = {
    apiKey: "AIzaSyAi3OHM04PGrkiWf78oSQcBwDLZjbALmjI",
    authDomain: "myportfolioproject-c449f.firebaseapp.com",
    databaseURL: "https://myportfolioproject-c449f.firebaseio.com",
    projectId: "myportfolioproject-c449f",
    storageBucket: "myportfolioproject-c449f.appspot.com",
    messagingSenderId: "382914868058",
    appId: "1:382914868058:web:ba0d37e9285d0e499b7963",
    measurementId: "G-2B2G2RS3BT"
  };
  // Initialize Firebase
  firebase.initializeApp(firebaseConfig);
  firebase.analytics();
</script>


Sp!.wkq@S%Y9BNt



hdoxoljsshqtqcuk
